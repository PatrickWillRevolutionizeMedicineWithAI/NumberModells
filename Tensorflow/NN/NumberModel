import pickle
import numpy as np
import matplotlib.pyplot as plt
from keras.datasets import fashion_mnist
from tensorflow.keras import layers
from tensorflow.keras.models import Sequential
from tensorflow.keras.utils import to_categorical
import keras
from PIL import Image

(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()
x_train = x_train.reshape(60000,28,28,1)
x_train = x_train.astype('float32') / 255.0
x_test = x_test.reshape(10000,28,28,1)
x_test = x_test.astype('float32') / 255.0
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

cloth_list = ['T-shirt','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']

model = Sequential()
model.add(layers.Conv2D(32,(2,2),activation='relu',input_shape=(28,28,1)))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Conv2D(32,(2,2),activation='relu'))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Flatten())
model.add(layers.Dense(128,activation='softmax'))
model.add(layers.Dropout(0.25))
model.add(layers.BatchNormalization())
model.add(layers.Dense(10,activation='softmax'))
model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])
model.fit(x_train,y_train,epochs=10,batch_size=80)
prediction = model.predict(x_test)
prediction = np.argmax(prediction,axis=1)

test_accuracy = model.evaluate(x_test, y_test)
print("Test Accuracy:", test_accuracy)

model.save('tensorflow_cnn_cloth_model.h5')

while True:
    index = np.random.randint(0,9999)
    prediction_index = prediction[index]
    target_index = np.argmax(y_test[index])
    prediction_value = cloth_list[prediction_index]
    target_value = cloth_list[target_index]
    pixel_values = np.array(x_test[index])
    pixel_values = pixel_values.reshape((28,28))
    pixel_values = (pixel_values * 255).astype(np.uint8)
    image = Image.fromarray(pixel_values)
    plt.imshow(image,cmap='Greys')
    plt.title(f'Target: {target_value} Prediction: {prediction_value}')
    plt.show()
